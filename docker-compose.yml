version: "3.8"

networks:
  kafkanet:

volumes:
  kafka-data:
  zookeeper-data:
  postgres-data:

configs:
  hapi:
     file: ./hapi.application.yaml

services:
  zookeeper:
    container_name: hackathon_zookeeper
    image: docker.io/bitnami/zookeeper:3.8
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-data:/data"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafkanet

  kafka:
    container_name: hackathon_kafka
    image: docker.io/bitnami/kafka:3.3
    restart: always
    ports:
      - "9093:9093"
    volumes:
      - "kafka-data:/data"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - kafkanet

  postgres:
    container_name: hackathon_postgres
    image: postgres:16-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgres
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: hapi
    networks:
      - kafkanet

  fhir:
    container_name: hackathon_fhir
    image: hapiproject/hapi:latest
    ports:
      - "8080:8080"
    configs:
      - source: hapi
        target: /app/config/application.yaml
    depends_on:
      - postgres
    networks:
      - kafkanet